{"version":3,"sources":["utils/AppUtil.js","utils/DOMUtil.js","components/Screen.js","components/HeaderLinks.js","components/Header.js","components/NavDots.js","components/Card.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["getScreenByN","screens","n","length","module","exports","getScreenIdByN","screen","id","elementInViewport","el","viewEl","top","offsetTop","left","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","scrollTop","scrollLeft","window","innerHeight","innerWidth","pageYOffset","pageXOffset","Screen","props","this","children","nth","className","AppUtil","classNames","React","Component","Header","_","map","links","link","key","exact","to","activeClassName","name","defaultProps","HeaderLinks","href","target","NavDots","calculateIfShowingOnScreen","newScreens","state","slice","each","isInViewPort","DOMUtil","document","getElementById","home","setState","func","debounce","addEventListener","removeEventListener","Card","title","icon","info","footer","HomePage","trigger","placement","mouseLeaveDelay","overlay","src","App","basename","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f2b99467.chunk.js","sourcesContent":["module.exports = {\r\n  getScreenByN,\r\n  getScreenIdByN,\r\n};\r\n\r\nfunction getScreenByN(screens, n) {\r\n  if (screens && screens.length >= n) {\r\n    return screens[n - 1];\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getScreenIdByN(screens, n) {\r\n  const screen = getScreenByN(screens, n);\r\n  if (screen) {\r\n    return screen.id;\r\n  }\r\n\r\n  return null;\r\n}\r\n","module.exports = {\r\n  elementInViewport,\r\n};\r\n\r\nfunction elementInViewport(el, viewEl) {\r\n  var top = el.offsetTop;\r\n  var left = el.offsetLeft;\r\n  var width = el.offsetWidth;\r\n  var height = el.offsetHeight;\r\n\r\n  while (el.offsetParent) {\r\n    el = el.offsetParent;\r\n    top += el.offsetTop;\r\n    left += el.offsetLeft;\r\n  }\r\n\r\n  if (viewEl) {\r\n    return (\r\n      top >= viewEl.scrollTop &&\r\n      left >= viewEl.scrollLeft &&\r\n      top + height <= viewEl.scrollTop + window.innerHeight &&\r\n      left + width <= viewEl.scrollLeft + window.innerWidth\r\n    );\r\n  } else {\r\n    return (\r\n      top >= window.pageYOffset &&\r\n      left >= window.pageXOffset &&\r\n      top + height <= window.pageYOffset + window.innerHeight &&\r\n      left + width <= window.pageXOffset + window.innerWidth\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport AppUtil from \"../utils/AppUtil\";\r\n\r\nclass Screen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { children, nth, screens, className } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id={AppUtil.getScreenIdByN(screens, nth)}\r\n        className={classNames(\"screen\", className)}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static defaultProps = {\r\n    links: [\r\n      { link: \"/\", name: \"Services\" },\r\n      { link: \"/works\", name: \"Works\" },\r\n      { link: \"/notes\", name: \"Notes\" },\r\n      { link: \"/contacts\", name: \"Contacts\" },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"header__links small-text\">\r\n        {_.map(this.props.links, (link) => {\r\n          return (\r\n            <NavLink\r\n              key={link.link}\r\n              exact\r\n              to={link.link}\r\n              activeClassName=\"active\"\r\n            >\r\n              <span className=\"arrows\">{\"<\"}</span>\r\n              {link.name}\r\n              <span className=\"arrows\">{\">\"}</span>\r\n            </NavLink>\r\n          );\r\n        })}\r\n        {/* <Link to=\"/\">Services</Link>\r\n        <Link to=\"/works\">Works</Link>\r\n        <Link to=\"/notes\">Notes</Link>\r\n        <Link to=\"/contacts\">Contacts</Link> */}\r\n        {/* <span>Services</span>\r\n        <span>Works</span>\r\n        <span>Notes</span>\r\n        <span>Contacts</span> */}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport HeaderLinks from \"../components/HeaderLinks\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <span className=\"header__home\">\r\n          <span>Robert</span>\r\n          <span className=\"alt-label\">Guazon</span>\r\n        </span>\r\n        <HeaderLinks />\r\n        <span className=\"header__social small-text\">\r\n          <a href=\"https://twitter.com/noobieprogrmmer\" target=\"_blank\">\r\n            <span>\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </span>\r\n            <span className=\"sub-label\">Twitter</span>\r\n          </a>\r\n          <a href=\"https://github.com/doppelgunner\" target=\"_blank\">\r\n            <span>\r\n              <i className=\"fab fa-github\"></i>\r\n            </span>\r\n            <span className=\"sub-label\">Github</span>\r\n          </a>\r\n          <a className=\"icon-button\" href=\"mailto:doppelgunner@gmail.com\">\r\n            <span>\r\n              <i className=\"far fa-envelope\"></i>\r\n            </span>\r\n          </a>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport _ from \"lodash\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport DOMUtil from \"../utils/DOMUtil\";\r\n\r\nclass NavDots extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      screens: props.screens,\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    screens: [],\r\n  };\r\n\r\n  calculateIfShowingOnScreen = () => {\r\n    const newScreens = this.state.screens.slice();\r\n    _.each(newScreens, (screen) => {\r\n      screen.isInViewPort = DOMUtil.elementInViewport(\r\n        document.getElementById(screen.id),\r\n        this.home\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      newScreens,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.calculateIfShowingOnScreen();\r\n\r\n    this.home = document.getElementById(\"home\");\r\n    this.func = _.debounce(this.calculateIfShowingOnScreen, 300);\r\n\r\n    this.home.addEventListener(\"scroll\", this.func);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.home.removeEventListener(\"scroll\", this.func);\r\n  }\r\n\r\n  render() {\r\n    const { screens } = this.state;\r\n\r\n    if (!screens && screens.length == 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"nav-dots\">\r\n        {_.map(screens, (screen) => {\r\n          return <a className={screen.isInViewPort ? \"active\" : null}></a>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavDots;\r\n","import React from \"react\";\r\n\r\nclass Card extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { title, icon, info, footer } = this.props;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card__header\">\r\n          <div className=\"card__header__title\">{title}</div>\r\n          <div className=\"card__header__icon\">{icon}</div>\r\n        </div>\r\n        <div className=\"card__info sub-label\">{info}</div>\r\n        <div className=\"card__footer\">{footer}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","//designed by: Logan Cee (https://dribbble.com/shots/11276631-DS-Personal-Developer-Portfolio)\r\n//coded by: noobieprogrammer (John Robert Guazon)\r\n\r\nimport React from \"react\";\r\n\r\nimport Screen from \"../components/Screen\";\r\nimport Header from \"../components/Header\";\r\nimport Tooltip from \"rc-tooltip\";\r\nimport NavDots from \"../components/NavDots\";\r\nimport Card from \"../components/Card\";\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      screens: [{ id: \"screen-profile\" }, { id: \"screen-work\" }],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page\" id=\"home\">\r\n        <NavDots screens={this.state.screens} />\r\n        <Screen screens={this.state.screens} nth={1}>\r\n          <Header />\r\n          <div className=\"profile\">\r\n            <div>\r\n              <div className=\"profile__info\">\r\n                <Tooltip\r\n                  trigger={[\"hover\"]}\r\n                  placement=\"top\"\r\n                  mouseLeaveDelay={0}\r\n                  overlay={\r\n                    <span className=\"tag-container\">\r\n                      <span className=\"tag--blue\">ReactJS</span>\r\n                      <span className=\"tag--green\">NodeJS</span>\r\n                      <span className=\"tag--red\">Java</span>\r\n                      <span className=\"tag--yellow\">Firebase</span>\r\n                      <span className=\"tag--white\">HTML</span>\r\n                      <span className=\"tag--pink\">CSS</span>\r\n                      <span className=\"tag\">Javascript</span>\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div className=\"profile__position tag\">\r\n                    Full-Stack Developer\r\n                  </div>\r\n                </Tooltip>\r\n                <div className=\"profile__motto big-text\">\r\n                  Talk is cheap. Show me the code\r\n                </div>\r\n                <div className=\"profile__saying sub-label small-text\">\r\n                  I turn ideas into reality using the power of code and my mind,\r\n                  what else do you expect???\r\n                </div>\r\n                {/* <span className=\"profile__chat\">Let's Chat</span>*/}\r\n              </div>\r\n              <div className=\"profile__experience\">\r\n                <span>\r\n                  <span className=\"big-text\">3</span>\r\n                  <span className=\"small-text sub-label upper-case\">\r\n                    years experience\r\n                  </span>\r\n                </span>\r\n                <span>\r\n                  <span className=\"big-text\">11</span>\r\n                  <span className=\"small-text sub-label upper-case\">\r\n                    projects completed on 3 countries\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile__picture\">\r\n              <img src={\"r-profile-background.png\"} />\r\n            </div>\r\n          </div>\r\n        </Screen>\r\n        <Screen screens={this.state.screens} nth={2} className=\"screen--about\">\r\n          <div>\r\n            <div className=\"bio--content\">\r\n              <div className=\"skillset\">\r\n                <Card\r\n                  title=\"Back-end\"\r\n                  info=\"Add business logic to your app with real data\"\r\n                  icon={<i className=\"fas fa-database\"></i>}\r\n                  footer={<a className=\"page-link\">5 projects</a>}\r\n                />\r\n                <Card\r\n                  title=\"Front-end\"\r\n                  info=\"Add unique, beautiful and interactive visual elements to your app\"\r\n                  footer={<a className=\"page-link\">5 projects</a>}\r\n                  icon={<i className=\"fas fa-code\"></i>}\r\n                />\r\n                <Card\r\n                  title=\"Web Scraping\"\r\n                  info={`I'll scrape huge data for you and your business and store it in a database or export it in a csv file`}\r\n                  footer={<a className=\"page-link\">1 project</a>}\r\n                  icon={<i className=\"fas fa-spider\"></i>}\r\n                />\r\n              </div>\r\n              <div className=\"introduce\">\r\n                <div className=\"introduce__label sub-label\">Introduce</div>\r\n                <div className=\"introduce__greetings\">\r\n                  Hello! I'm Robert Guazon\r\n                </div>\r\n                <div className=\"introduce__motto\">\r\n                  \"Every great app starts with a simple execution\"\r\n                </div>\r\n                <div className=\"introduce__story sub-label\">\r\n                  Since the beginning of my journey as a full-stack web\r\n                  developer 3 years ago, I've done and written apps. Most of my\r\n                  projects before I started working were mostly personal\r\n                  projects. Because of that I was familiar with almost all the\r\n                  famous programming languages and it helped me in my job. As of\r\n                  now I've done numerous projects which I can be proud of. I\r\n                  think of jobs as a learning step in order to enhance my\r\n                  skills.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bio--footer\">\r\n              <img className=\"bio--footer_company-logo\" src={\"sxi-logo.svg\"} />\r\n              <img className=\"bio--footer_company-logo\" src={\"rt-logo.png\"} />\r\n            </div>\r\n          </div>\r\n        </Screen>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Router basename=\"/portfolio\">\r\n          <Switch>\r\n            <Route path=\"/contacts\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}